import pandas as pd
import numpy as np
import os
import algo_main as al
import matplotlib.pyplot as plt

def get_pair(num, method):
    if method == 'dtw':
        pair_list = al.dwt_find_pair(data=None, criteria=0, reload=True, reload_index=num) 
    if method == 'ssd':
        pair_list = al.ssd_find_pair(data=None, criteria=0, reload=True, reload_index=num)
    return pair_list

def get_summary_data(num, method):
    summary = []
    summary_columns = ['name', 'max_drawdown', 'total_return', 'std', 'idle']
    pair_list = get_pair(num, method)
    for pair in pair_list:
        
        file_name = pair[0] + '&' + pair[1]
        if method == 'dtw':
            file_path = 'D:/data/algo_package/trade_review_dtw/' + file_name + '.csv'
        if method == 'ssd': 
            file_path = 'D:/data/algo_package/trade_review_ssd/' + file_name + '.csv'
        data = pd.read_csv(file_path)
        
        value = data['value']
        position_inc = data['in_positon']
        
        maxdown = min(value)
        total_return = (value[len(value)-1] - value[0]) / value[0]
        idle_time = position_inc[~position_inc].shape[0]
        value_std = np.std(value)
        #sharpe_ratio = total_return / value_std
        
        summary.append([file_name, maxdown, total_return, value_std, idle_time])
    
    summary = pd.DataFrame(summary, columns=summary_columns)
    summary.to_csv('D:/data/algo_package/all_trade_review_' + method + '.csv', index=False)
        
    return summary

def get_full_review(num, method):
    pair_list = get_pair(num, method)
    value = np.zeros(750)
    for pair in pair_list:
        file_name = pair[0] + '&' + pair[1]
        if method == 'dtw':
            file_path = 'D:/data/algo_package/trade_review_dtw/' + file_name + '.csv'
        if method == 'ssd': 
            file_path = 'D:/data/algo_package/trade_review_ssd/' + file_name + '.csv'
        data = pd.read_csv(file_path)
        value += data['value']

    maxdown = min(value)/value[0]
    std = np.std(value)
    percentage_change = (value[len(value)-1] - value[0]) / value[0]
    
    feature = [maxdown, percentage_change, std]

    val = pd.DataFrame(value, columns=['value'])
    #val.to_csv('D:/data/algo_package/total_value.csv')
        
    return feature, val

def plotting():
    df1 = pd.read_csv("D:/data/algo_package/meta_dtw.csv")
    df2 = pd.read_csv("D:/data/algo_package/meta_ssd.csv")
    
    columns = df1.columns
    plt.figure(figsize=(8, 6))

    for column in columns:
        plt.plot(df1[column], marker='o', label='dtw', linestyle='-')
        plt.plot(df2[column], marker='x', label='ssd', linestyle='--')
        plt.title(f'Comparison of {column}')
        plt.xlabel('number of top rank pairs')
        plt.ylabel(column)
        plt.legend()
        plt.grid(True)
        
        plt.savefig('D:/data/algo_package/comparison_' + column + '.png')
        plt.close()

    return 0

############################################################
def main():

    dtw_meta_summaries = []
    ssd_meta_summaries = []
    for num in range(1, 101):
        for method in ['dtw', 'ssd']:
           feature, val = get_full_review(num, method)
           if method == 'dtw':
                dtw_meta_summaries.append(feature)
                print(f'DTW {num}th summary')
           else:
                ssd_meta_summaries.append(feature)
                print(f'SSD {num}th summary')
        
    dtw_meta_summaries = pd.DataFrame(dtw_meta_summaries, columns=['max_drawdown', 'percentage_increase','std'])
    ssd_meta_summaries = pd.DataFrame(ssd_meta_summaries, columns=['max_drawdown', 'percentage_increase','std'])
    dtw_meta_summaries.to_csv("D:/data/algo_package/meta_dtw.csv", index=False)
    ssd_meta_summaries.to_csv("D:/data/algo_package/meta_ssd.csv", index=False)
    
    plotting()
    
    return 0
############################################################
main()
